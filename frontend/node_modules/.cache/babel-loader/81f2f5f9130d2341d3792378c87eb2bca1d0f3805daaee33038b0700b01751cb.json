{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kanha\\\\Downloads\\\\leave-management-starter-full\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport API from \"../services/api\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const {\n    role\n  } = useParams();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const nav = useNavigate();\n  const submit = async e => {\n    e.preventDefault();\n    try {\n      const res = await API.post(\"/auth/login\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n      if (res.data.user.role !== role) {\n        setErr(`This account is registered as ${res.data.user.role}, not ${role}.`);\n        localStorage.clear();\n        return;\n      }\n      nav(role === \"admin\" ? \"/admin\" : \"/employee\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErr(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.msg) || \"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center card auth-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: [role, \" Login\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"\\uD83D\\uDCE7 Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"\\uD83D\\uDD11 Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"err\",\n        children: err\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"bnHXJ2tx3P92Kc3OMe+F+/IOQ8Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","API","useNavigate","useParams","jsxDEV","_jsxDEV","Login","_s","role","email","setEmail","password","setPassword","err","setErr","nav","submit","e","preventDefault","res","post","localStorage","setItem","data","token","JSON","stringify","user","clear","error","_error$response","_error$response$data","response","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/kanha/Downloads/leave-management-starter-full/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport API from \"../services/api\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nexport default function Login() {\n  const { role } = useParams();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const nav = useNavigate();\n\n  const submit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await API.post(\"/auth/login\", { email, password });\n      localStorage.setItem(\"token\", res.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n\n      if (res.data.user.role !== role) {\n        setErr(`This account is registered as ${res.data.user.role}, not ${role}.`);\n        localStorage.clear();\n        return;\n      }\n\n      nav(role === \"admin\" ? \"/admin\" : \"/employee\");\n    } catch (error) {\n      setErr(error.response?.data?.msg || \"Login failed\");\n    }\n  };\n\n  return (\n    <div className=\"center card auth-card\">\n      <h2 className=\"title\">{role} Login</h2>\n      <form onSubmit={submit}>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"ðŸ“§ Email\"\n          required\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"ðŸ”‘ Password\"\n          required\n        />\n        <button type=\"submit\" className=\"btn primary\">Login</button>\n        {err && <div className=\"err\">{err}</div>}\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}